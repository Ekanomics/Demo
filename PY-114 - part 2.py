# part 2

# 1 - Дано расстояние L в сантиметрах. Используя операцию деления нацело, найти количество полных метров в нем (1 метр = 100 см).
L = 0
while L <= 0:
    L = int(input("Расстояние в сантиметрах: "))
    if L <= 0:
        print("Число должно быть положительным, введите снова: ")
else:
    full_m = L // 100
    print("Количество полных метров: ", full_m)

# 2 - Дана масса M в килограммах. Используя операцию деления нацело, найти количество полных тонн в ней (1 тонна = 1000 кг)
M = 0
while M <= 0:
    M = int(input("Масса в килограммах: "))
    if M <= 0:
        print("Число должно быть положительным, введите снова: ")
else:
    full_t = M // 1000
    print("Количество полных тонн: ", full_t)

# 3 - Дан размер файла в байтах. Используя операцию деления нацело, найти количество полных килобайтов, которые занимает данный файл (1 килобайт = 1024 байта).
F = 0
while F <= 0:
    F = int(input("Размер файла в байтах: "))
    if F <= 0:
        print("Число должно быть положительным, введите снова: ")
else:
    full_kb = F // 1024
    print("Количество полных килобайтов: ", full_kb)

# 4 - Даны целые положительные числа A и B (A > B). На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). Используя операцию деления нацело, найти количество отрезков B, размещенных на отрезке A.
A = 0
B = 0
while A <= 0 or B <= 0 or A <= B:
    try:
        A = int(input("Дано целое положительное число (A): "))
        B = int(input("Дано целое положительное число (B): "))

        if A <= B:
            print("Отрезок А должен быть больше B, ведите снова: ")
        if A <= 0 or B <= 0:
            print("Число должно быть положительным, введите снова: ")
    except ValueError:
        print("Ошибка, введите целое число")

a_amount = A // B
print("Количество отрезков B, размещенных на отрезке A: ", a_amount)


# 5 - Даны целые положительные числа A и B (A > B). На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). Используя операцию взятия остатка от деления нацело, найти длину незанятой части отрезка A.
A = 0
B = 0
while A <= 0 or B <= 0 or A <= B:
    try:
        A = int(input("Дано целое положительное число (A): "))
        B = int(input("Дано целое положительное число (B): "))

        if A <= B:
            print("Отрезок А должен быть больше B, ведите снова: ")
        if A <= 0 or B <= 0:
            print("Число должно быть положительным, введите снова: ")
    except ValueError:
        print("Ошибка, введите целое число")

a_amount = A % B
print("Количество отрезков B, размещенных на отрезке A: ", a_amount)

# 6 - Дано двузначное число. Вывести вначале его левую цифру (десятки), а затем — его правую цифру (единицы). Для нахождения десятков использовать операцию деления нацело, для нахождения единиц — операцию взятия остатка от деления.
num = 0
while True:
    num = int(input("Введите двузначное число: "))

    if 10 <= num <= 99:
        tens = num // 10
        ones = num % 10

        print("Десятки: ", tens)
        print("Единицы: ", ones)

    else:
        print("Ошибка, пожалуйста введите двузначное число: ")

# 7 - Дано двузначное число. Найти сумму и произведение его цифр.
while True:
    try:
        num = int(input("Введите двузначное число: "))
        if 10 <= num <= 99:
            tens = num // 10
            ones = num % 10
            summ = tens + ones
            prod = tens * ones
            print("Сумма цифр двузначного числа: ", summ)
            print("Произведение цифр двузначного числа: ", prod)
            break
        else:
            print("Ошибка, пожалуйста введите двузначное число: ")
    except ValueError:
        print("Ошибка, введите целое число")

# 8 - Дано двузначное число. Вывести число, полученное при перестановке цифр исходного числа.
while True:
    num = int(input("Введите двузначное число: "))

    if 10 <= num <= 99:
        tens = num // 10
        ones = num % 10

        swap_num = (ones * 10) + tens

        print("Число, полученное при перестановке цифр исходного числа: ", swap_num)
        break
    else:
        print("Ошибка, пожалуйста введите двузначное число: ")


# 9 - Дано трехзначное число. Используя одну операцию деления нацело, вывести первую цифру данного числа (сотни).
while True:
    num = int(input("Введите трехзначное число: "))

    if 100 <= num <= 999:
        hund = num // 100

        print("Первая цифра данного числа: ", hund)
        break

    else:
        print("Ошибка, пожалуйста введите трехзначное число: ")


# 10 - Дано трехзначное число. Вывести вначале его последнюю цифру (единицы), а затем — его среднюю цифру (десятки).
while True:
    num = int(input("Введите трехзначное число: "))

    if 100 <= num <= 999:
        ones = num % 10
        tens = (num // 10) % 10

        print("Последняя цифра: ", ones)
        print("Средняя цифра: ", tens)
        break

    else:
        print("Ошибка, пожалуйста введите трехзначное число: ")
